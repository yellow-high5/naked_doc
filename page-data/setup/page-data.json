{"componentChunkName":"component---src-templates-docs-tsx","path":"/setup","result":{"data":{"site":{"siteMetadata":{"title":"Naked Doc | Simple startup document","docsLocation":"https://github.com/yellow-high5/naked_doc/tree/master/content"}},"mdx":{"fields":{"id":"86a9f358-3473-5016-b567-e2f3ec6db802","title":"Tutorial & boilerplate setup","slug":"/setup"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tutorial & boilerplate setup\",\n  \"metaTitle\": \"Todo app react boilerplate setup | GraphQL React Apollo Hooks Tutorial\",\n  \"metaDescription\": \"The GraphQL backend is already ready. The task is to convert the static UI into a working realtime app in React.js\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For this tutorial, the GraphQL backend and the basic app UI is already ready.\\nOur task will be to convert the \\\"static\\\" UI into a working realtime app.\"), mdx(\"h3\", null, \"Download and run the boilerplate\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download the boilerplate from \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://hasura.io/learn/graphql/react/boilerplate.zip\"\n  }), \"https://hasura.io/learn/graphql/react/boilerplate.zip\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Unzip and make sure you're in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"app-boilerplate\"), \" directory\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install dependencies and run the \\\"static\\\" app\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm start\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Signup/login as a user to load the todo app page\")), mdx(\"p\", null, \"This is what you should see after the steps above:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://graphql-engine-cdn.hasura.io/learn-hasura/assets/graphql-react/boilerplate-after-login.png\",\n    \"alt\": \"Boilerplate after login\"\n  }))), mdx(\"h3\", null, \"Load GraphiQL to play with your GraphQL APIs\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Head to \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://hasura.io/learn/graphql/graphiql\"\n  }), \"https://hasura.io/learn/graphql/graphiql\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Log in (so that you can test the GraphQL APIs with a valid user token)\")), mdx(\"p\", null, \"This is what you should see after the steps above:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://graphql-engine-cdn.hasura.io/learn-hasura/assets/graphql-react/graphiql-after-login.png\",\n    \"alt\": \"GraphiQL after login\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#download-and-run-the-boilerplate","title":"Download and run the boilerplate"},{"url":"#load-graphiql-to-play-with-your-graphql-apis","title":"Load GraphiQL to play with your GraphQL APIs"}]},"parent":{"__typename":"File","relativePath":"setup.md"},"frontmatter":{"metaTitle":"Todo app react boilerplate setup | GraphQL React Apollo Hooks Tutorial","metaDescription":"The GraphQL backend is already ready. The task is to convert the static UI into a working realtime app in React.js"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/intro-to-graphql","title":"Intro to GraphQL"}}},{"node":{"fields":{"slug":"/introduction","title":"Course Introduction"}}},{"node":{"fields":{"slug":"/queries","title":"Queries"}}},{"node":{"fields":{"slug":"/apollo-client","title":"Set up a GraphQL client with Apollo"}}},{"node":{"fields":{"slug":"/mutations-variables","title":"Mutations & Query variables"}}},{"node":{"fields":{"slug":"/realtime-feed","title":"Realtime Feed"}}},{"node":{"fields":{"slug":"/setup","title":"Tutorial & boilerplate setup"}}},{"node":{"fields":{"slug":"/subscriptions/2-apollo-subscription","title":"Apollo useSubscription React hook"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations","title":"Optimistic UI updates after mutations"}}},{"node":{"fields":{"slug":"/subscriptions","title":"Subscriptions to show online users"}}},{"node":{"fields":{"slug":"/subscriptions/3-create-subscription","title":"Create Subscription and Render Result"}}},{"node":{"fields":{"slug":"/subscriptions/1-subscription","title":"Subscription"}}},{"node":{"fields":{"slug":"/realtime-feed/1-fetch-public","title":"Fetch public todos - subscription"}}},{"node":{"fields":{"slug":"/realtime-feed/2-sync-todo","title":"Sync new todos"}}},{"node":{"fields":{"slug":"/queries/1-fetch-todos-query","title":"Fetch todos - query"}}},{"node":{"fields":{"slug":"/queries/2-create-query","title":"useQuery hook"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/1-update-todos","title":"Update todos - mutation"}}},{"node":{"fields":{"slug":"/what-next","title":"What next?"}}},{"node":{"fields":{"slug":"/queries/3-handle-errors","title":"Handle loading/errors"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/2-mutation-cache","title":"Mutation and update cache"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3.2-bulk-delete-mutation","title":"Bulk delete todos - mutation"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3.1-mutation-update-cache","title":"Mutation and update cache"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3-remove-todos","title":"Remove todos - mutation"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3.3-clear-completed","title":"Mutation and update cache"}}},{"node":{"fields":{"slug":"/mutations-variables/2-query-variables","title":"Query Variables"}}},{"node":{"fields":{"slug":"/mutations-variables/1-create-todo","title":"Create todos - mutation"}}},{"node":{"fields":{"slug":"/mutations-variables/3-create-mutation","title":"useMutation Hook, Update Cache"}}},{"node":{"fields":{"slug":"/intro-to-graphql/1-architecture","title":"Architecture"}}},{"node":{"fields":{"slug":"/intro-to-graphql/2-fetching-data-queries","title":"Fetching data - Queries"}}},{"node":{"fields":{"slug":"/intro-to-graphql/3-writing-data-mutations","title":"Writing data - Mutations"}}},{"node":{"fields":{"slug":"/intro-to-graphql/4-watching-data-subscriptions","title":"Watching data - Subscriptions"}}}]}},"pageContext":{"id":"86a9f358-3473-5016-b567-e2f3ec6db802"}}}
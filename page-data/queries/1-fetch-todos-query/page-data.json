{"componentChunkName":"component---src-templates-docs-tsx","path":"/queries/1-fetch-todos-query","result":{"data":{"site":{"siteMetadata":{"title":"Naked Doc | Simple startup document","docsLocation":"https://github.com/yellow-high5/naked_doc/tree/master/content"}},"mdx":{"fields":{"id":"29ca36ea-dd57-50b8-8664-f20f1390be08","title":"Fetch todos - query","slug":"/queries/1-fetch-todos-query"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Fetch todos - query\",\n  \"metaTitle\": \"Query to fetch todo | GraphQL React Apollo Hooks Tutorial\",\n  \"metaDescription\": \"GraphQL Query to fetch personal todos. Try the query in GraphiQL, passing the Authorization token to get authenticated results\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The first graphql query you will write will be to fetch personal todos. You will need to load the todo data from the database which belongs to the logged in user. Let's define a graphql query to fetch the required data.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query getMyTodos {\\n  todos(where: { is_public: { _eq: false} }, order_by: { created_at: desc }) {\\n    id\\n    title\\n    created_at\\n    is_completed\\n  }\\n}\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hasura.io/learn/graphql/graphiql\"\n  }), \"Try\"), \" this query in GraphiQL against the application database to see what the response looks like.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": You need to pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Authorization: Bearer <token>\"), \" header before querying to get the results. The token is auto-filled in the UI after logging in via Auth0.\"), mdx(\"p\", null, \"This query is the actual graphql query that we will be using in our react app and hence test this out to make sure it works as expected.\"), mdx(\"p\", null, \"Let's now integrate this graphql query into our react app.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"__typename":"File","relativePath":"queries/1-fetch-todos-query.md"},"frontmatter":{"metaTitle":"Query to fetch todo | GraphQL React Apollo Hooks Tutorial","metaDescription":"GraphQL Query to fetch personal todos. Try the query in GraphiQL, passing the Authorization token to get authenticated results"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/intro-to-graphql","title":"Intro to GraphQL"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/apollo-client","title":"Set up a GraphQL client with Apollo"}}},{"node":{"fields":{"slug":"/introduction","title":"Course Introduction"}}},{"node":{"fields":{"slug":"/mutations-variables","title":"Mutations & Query variables"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations","title":"Optimistic UI updates after mutations"}}},{"node":{"fields":{"slug":"/realtime-feed","title":"Realtime Feed"}}},{"node":{"fields":{"slug":"/queries","title":"Queries"}}},{"node":{"fields":{"slug":"/setup","title":"Tutorial & boilerplate setup"}}},{"node":{"fields":{"slug":"/subscriptions","title":"Subscriptions to show online users"}}},{"node":{"fields":{"slug":"/subscriptions/2-apollo-subscription","title":"Apollo useSubscription React hook"}}},{"node":{"fields":{"slug":"/what-next","title":"What next?"}}},{"node":{"fields":{"slug":"/subscriptions/1-subscription","title":"Subscription"}}},{"node":{"fields":{"slug":"/subscriptions/3-create-subscription","title":"Create Subscription and Render Result"}}},{"node":{"fields":{"slug":"/realtime-feed/2-sync-todo","title":"Sync new todos"}}},{"node":{"fields":{"slug":"/queries/2-create-query","title":"useQuery hook"}}},{"node":{"fields":{"slug":"/realtime-feed/1-fetch-public","title":"Fetch public todos - subscription"}}},{"node":{"fields":{"slug":"/queries/1-fetch-todos-query","title":"Fetch todos - query"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/1-update-todos","title":"Update todos - mutation"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3-remove-todos","title":"Remove todos - mutation"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/2-mutation-cache","title":"Mutation and update cache"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3.1-mutation-update-cache","title":"Mutation and update cache"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3.2-bulk-delete-mutation","title":"Bulk delete todos - mutation"}}},{"node":{"fields":{"slug":"/mutations-variables/2-query-variables","title":"Query Variables"}}},{"node":{"fields":{"slug":"/optimistic-update-mutations/3.3-clear-completed","title":"Mutation and update cache"}}},{"node":{"fields":{"slug":"/mutations-variables/3-create-mutation","title":"useMutation Hook, Update Cache"}}},{"node":{"fields":{"slug":"/queries/3-handle-errors","title":"Handle loading/errors"}}},{"node":{"fields":{"slug":"/mutations-variables/1-create-todo","title":"Create todos - mutation"}}},{"node":{"fields":{"slug":"/intro-to-graphql/1-architecture","title":"Architecture"}}},{"node":{"fields":{"slug":"/intro-to-graphql/3-writing-data-mutations","title":"Writing data - Mutations"}}},{"node":{"fields":{"slug":"/intro-to-graphql/4-watching-data-subscriptions","title":"Watching data - Subscriptions"}}},{"node":{"fields":{"slug":"/intro-to-graphql/2-fetching-data-queries","title":"Fetching data - Queries"}}}]}},"pageContext":{"id":"29ca36ea-dd57-50b8-8664-f20f1390be08"}}}
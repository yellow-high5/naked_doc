{"componentChunkName":"component---src-templates-docs-tsx","path":"/chpater3","result":{"data":{"site":{"siteMetadata":{"title":"Naked Doc | Simple startup document","docsLocation":"https://github.com/yellow-high5/naked_doc/tree/master/content"}},"mdx":{"fields":{"id":"c032a1d6-5fcb-5f97-9d24-f94831381b77","title":"Intro to GraphQL","slug":"/chpater3"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Intro to GraphQL\",\n  \"metaTitle\": \"Intro to GraphQL | GraphQL React Apollo Hooks Tutorial\",\n  \"metaDescription\": \"What is GraphQL? GraphQL is a specification for how to talk to an API. This part also covers GraphQL vs REST with an example and takes you over benefits of GraphQL\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"__typename":"File","relativePath":"chpater3.md"},"frontmatter":{"metaTitle":"Intro to GraphQL | GraphQL React Apollo Hooks Tutorial","metaDescription":"What is GraphQL? GraphQL is a specification for how to talk to an API. This part also covers GraphQL vs REST with an example and takes you over benefits of GraphQL"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/chapter1/1-architecture","title":"Architecture"}}},{"node":{"fields":{"slug":"/chapter1/2-fetching-data-queries","title":"Fetching data - Queries"}}},{"node":{"fields":{"slug":"/chapter1/3-writing-data-mutations","title":"Writing data - Mutations"}}},{"node":{"fields":{"slug":"/chapter1/4-watching-data-subscriptions","title":"Watching data - Subscriptions"}}},{"node":{"fields":{"slug":"/chapter1","title":"Intro to GraphQL"}}},{"node":{"fields":{"slug":"/chapter2/1-sample","title":"1 Sample"}}},{"node":{"fields":{"slug":"/chapter2/2-sample","title":"2 Sample"}}},{"node":{"fields":{"slug":"/chpater3","title":"Intro to GraphQL"}}},{"node":{"fields":{"slug":"/","title":"ようこそ、Naked Docへ"}}}]}},"pageContext":{"id":"c032a1d6-5fcb-5f97-9d24-f94831381b77"}}}